{"name":"Pi-sounds","tagline":"Building a Soundboard for my Raspberry Pi","body":"# Description\r\n* soundboard.py takes input from 3 different buttons which each play a sound and blink 2 LEDs in different patterns.\r\n* droidsounds.py is a modified version I use from an Android SSH app which takes a command line optional parameter -c to indicate that you would like to control the \"buttons\" via the command line which provides intrusctions at runtime\r\n \r\n# Overview\r\n* Input Pin 18 reads a pull-down button that plays a sound and turns on LED on output pin 17\r\n* then turns the light on output pin 17 off after it's done playing\r\n* Input Pin 24 reads a pull-down button that cycles through 4 states to toggle LED patternss on output pins 17 and 22: All Off, 17on/22off, 17off/22on, both on\r\n* Input Pin 25 reads a pull-down button that turns on alternating flashing LEDs (like a siren) on pins 17 and 22 and plays a sound ONLY while button is pressed then stops the sound and turns off the lights when released\r\n\r\n\r\n# TODOs\r\n* Clean up code into re-usable functions for the different blinkys that take parameters such as Pin#, Light Pattern, Timing\r\n* Prompt for multiple choice User Input to select the sound-set\r\n* Use a rotary encoder to change the sounds played\r\n* Make a standalone PCB with ribbon connector to Pi\r\n* Make a cool enclosure with powered USB Hub and built-in speaker\r\n\r\n\r\n# Breadboard\r\n![Breadboard Layout](https://github.com/blevien/pi-sounds/raw/master/breadboard.jpg)\r\n\r\n# Custom PCB\r\n![Front](https://github.com/blevien/pi-sounds/raw/master/PCB_Front.png) ![Back](https://github.com/blevien/pi-sounds/raw/master/PCB_Back.png)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}